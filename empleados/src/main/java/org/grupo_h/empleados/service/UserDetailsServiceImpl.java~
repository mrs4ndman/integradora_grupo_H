//package org.grupo_h.empleados.service;
//
//import org.grupo_h.comun.entity.Usuario;
//import org.grupo_h.empleados.repository.UsuarioRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.security.authentication.DisabledException;
//import org.springframework.security.authentication.LockedException;
//import org.springframework.security.core.userdetails.User;
//import org.springframework.security.core.userdetails.UserDetails;
//import org.springframework.security.core.userdetails.UserDetailsService;
//import org.springframework.security.core.userdetails.UsernameNotFoundException;
//import org.springframework.stereotype.Service;
//
//import java.util.Collections;
//
//@Service
//public class UserDetailsServiceImpl implements UserDetailsService {
//
//    @Autowired
//    private UsuarioRepository usuarioRepository;
//
//    @Override
//    public UserDetails loadUserByUsername(String nombreUsuario) throws UsernameNotFoundException, DisabledException, LockedException {
//        Usuario usuario = usuarioRepository.findByNombreUsuario(nombreUsuario)
//                .orElseThrow(() -> new UsernameNotFoundException("Usuario no encontrado: " + nombreUsuario));
//
//        if (!usuario.isHabilitado()) {
//            throw new DisabledException("La cuenta del usuario está deshabilitada: " + nombreUsuario);
//        }
//
//        if (usuario.isCuentaBloqueada()) {
//            throw new LockedException("La cuenta del usuario está bloqueada: " + nombreUsuario);
//        }
//
//        return new User(usuario.getNombreUsuario(),
//                usuario.getContrasena(),
//                usuario.isHabilitado(),
//                true,
//                true,
//                !usuario.isCuentaBloqueada(),
//                Collections.emptyList());
//    }
//}
