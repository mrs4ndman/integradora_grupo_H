services:
  mysql-app-db:
    image: juanmananesprieto/mi_mysql_app:latest
    container_name: mysql_app_db_container
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'tu_password_root_muy_seguro' # ¡CAMBIA ESTO!
      MYSQL_DATABASE: 'mi_app_db'
      MYSQL_USER: 'user_app'
      MYSQL_PASSWORD: 'password_app_muy_seguro' # ¡CAMBIA ESTO!
    ports:
      - "3306:3306"
    volumes:
      - mysql_app_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}", "--silent" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  apps-tomcat: # Servicio Tomcat unificado
    # REEMPLAZA la siguiente línea con el nombre de tu imagen de Tomcat en Docker Hub
    image: juanmananesprieto/apps-tomcat-integrada:latest
    container_name: apps_tomcat_container
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-app-db:3306/mi_app_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: 'user_app'
      SPRING_DATASOURCE_PASSWORD: 'password_app_muy_seguro' # ¡CAMBIA ESTO!
      SPRING_JPA_HIBERNATE_DDL_AUTO: 'validate'
    depends_on:
      mysql-app-db:
        condition: service_healthy
    networks:
      - app-network
    # healthcheck: # Opcional, si tu imagen de Tomcat tiene curl y quieres verificar las apps
    #   test: [ "CMD", "curl", "-f", "http://localhost:8080/empleados/" ]
    #   interval: 15s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 60s

  apache-webserver:
    # REEMPLAZA la siguiente línea con el nombre de tu imagen de Apache en Docker Hub
    image: juanmananesprieto/mi-apache-personalizado:latest
    container_name: apache_webserver_container
    restart: unless-stopped
    ports:
      - "80:80" # Apache escuchando en el puerto 80 del host
    # Ya no se necesita el 'volumes' aquí porque el contenido está en la imagen
    networks:
      - app-network
    depends_on:
      mysql-app-db: # Dependencia cambiada
        condition: service_healthy

volumes:
  mysql_app_data:

networks:
  app-network:
    driver: bridge